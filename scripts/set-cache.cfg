[general]
arch = intel
enable_icache_modeling = true
inst_mode_end = cache_only
inst_mode_init = cache_only
inst_mode_output = true
inst_mode_roi = detailed
magic = true
mode = 64
total_cores = 32

[power]
technology_node = 32 #32nm
vdd = 1.2 #1.2v

[perf_model/core]
frequency = 2 # 2GHz
logical_cpus = 1 # 1 SMT

[perf_model/cache]
levels = 2

[perf_model/l1_dcache]
address_hash = mask
cache_block_size = 64
cache_size = 32 # in KB
associativity = 4
data_access_time = 1
tags_access_time = 1
coherent = false
perf_model_type = parallel
replacement_policy = lru
shared_cores = 1

[perf_model/l1_icache]
address_hash = mask
cache_block_size = 64
cache_size = 32 # in KB
associativity = 4
data_access_time = 1
tags_access_time = 1
coherent = false
perf_model_type = parallel
replacement_policy = lru
shared_cores = 1

#[perf_model/nuca]
#enabled = true
#cache_size = 8192       # In KB
#associativity = 4
#address_hash = mask
#replacement_policy = lru
#tags_access_time = 2    # In cycles
#data_access_time = 8    # In cycles, parallel with tag access
#bandwidth = 64          # In GB/s

#[perf_model/nuca/queue_model]
#enabled = true
#type = history_list

[perf_model/l2_cache]
address_hash = mask
cache_block_size = 64
cache_size = 1024 # in KB
associativity = 4
data_access_time = 11
tags_access_time = 6
coherent = true
perf_model_type = parallel
replacement_policy = lru
shared_cores = 4

[caching_protocol]
type = parametric_dram_directory_msi
variant = mesi

[perf_model/dram_directory]
directory_cache_access_time = 10
directory_type = full_map
locations = llc
total_entries = 1048576 # in KB 

[perf_model/dram]
type = constant
num_controllers = 4
controllers_interleaving = 0
direct_access = false
latency = 100  # 200 cycles @ 2GHz = 200 * 0.5ns/cycles = 100ns
per_controller_bandwidth = 16 # In GB/s

# This describes the various models used for the different networks on the core
[network]
# Valid Networks :
# 1) magic
# 2) emesh_hop_counter, emesh_hop_by_hop
# 3) bus
memory_model_1 = emesh_hop_by_hop
#memory_model_2 = emesh_hop_counter
system_model = magic
collect_traffic_matrix = false

[network/emesh_hop_counter]
link_bandwidth = 64 # In bits/cycles
hop_latency = 2

[network/emesh_hop_by_hop]
link_bandwidth = 64   # In bits/cycle
hop_latency = 2       # In cycles
concentration = 4     # Number of cores per network stop
dimensions = 2        # Dimensions (1 for line/ring, 2 for 2-D mesh/torus)
wrap_around = false   # Use wrap-around links (false for line/mesh, true for ring/torus)
size = ""             # ":"-separated list of size for each dimension, default = auto

[network/emesh_hop_by_hop/queue_model]
enabled = true
type = history_list

[network/emesh_hop_by_hop/broadcast_tree]
enabled = false
